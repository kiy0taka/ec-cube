# for travis-ci
# see also. https://travis-ci.org
dist: xenial
git:
  submodules: false

language: php
services:
  - docker
  - mysql
  - postgresql

cache:
  directories:
    - $HOME/.composer/cache
    - bin/.phpunit

php:
  - 7.1
  - 7.2
  - 7.3
#  - 7.4snapshot

env:
  global:
    - SYMFONY_DEPRECATIONS_HELPER=weak
  matrix:
    - DATABASE_URL=mysql://root:@localhost/cube4_dev DATABASE_SERVER_VERSION=5
    - DATABASE_URL=postgres://postgres:password@localhost/cube4_dev DATABASE_SERVER_VERSION=9
#    - DATABASE_URL=sqlite:///var/eccube.db DATABASE_SERVER_VERSION=3 COVERAGE=1

#matrix:
#  allow_failures:
#    - php: 7.4snapshot
#    - env: DATABASE_URL=sqlite:///var/eccube.db DATABASE_SERVER_VERSION=3 COVERAGE=1

## see https://github.com/symfony/symfony/blob/e0bdc0c35e9afdb3bee8af172f90e9648c4012fc/.travis.yml#L92-L97
before_install: &php_setup |
  phpenv config-rm xdebug.ini || true
  echo "opcache.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  echo "extension = apcu.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  echo "apc.enabled=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  echo "apc.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  echo "date.timezone=Asia/Tokyo" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

eccube_setup: &eccube_setup |
  bin/console doctrine:database:create --env=dev
  bin/console doctrine:schema:create --env=dev
  bin/console eccube:fixtures:load --env=dev

package_api_setup: &package_api_setup |
  mkdir ${PWD}/repos
  docker run -d --rm -v ${PWD}/repos:/repos -e MOCK_REPO_DIR=/repos -p 8080:8080 eccube/mock-package-api

#install:
#  - &composer_install composer install --dev --no-interaction -o --apcu-autoloader
#  - echo "APP_ENV=test" > .env
#  - *eccube_setup

script:
  - ls
#  - ./bin/phpunit --exclude-group cache-clear,cache-clear-install,update-schema-doctrine
#  - ./bin/phpunit --group cache-clear
#  - ./bin/phpunit --group cache-clear-install
#  - ./bin/phpunit --group update-schema-doctrine --exclude-group update-schema-doctrine-install
#  - ./bin/phpunit --group update-schema-doctrine-install --filter=testInstallPluginWithNoProxy
#  - ./bin/phpunit --group update-schema-doctrine-install --filter=testInstallPluginWithProxy
#  - ./bin/phpunit --group update-schema-doctrine-install --filter=testEnablePluginWithNoProxy
#  - ./bin/phpunit --group update-schema-doctrine-install --filter=testEnablePluginWithProxy
#  - ./bin/phpunit --group update-schema-doctrine-install --filter=testDisablePluginWithNoProxy
#  - ./bin/phpunit --group update-schema-doctrine-install --filter=testDisablePluginWithProxy
#  - ./bin/phpunit --group update-schema-doctrine-install --filter=testCreateEntityAndTrait

jobs:
  fast_finish: true
  include:
  #    - &unit_test
  #      stage: Unit Test
  #      before_install:
  #        - *php_setup
  #        - gem install mailcatcher
  #      install:
  #        - *composer_install
  #        - *eccube_setup
  #      env: DATABASE_URL=mysql://root:@localhost/cube4_dev DATABASE_SERVER_VERSION=5
  #      script:
  #        - ./bin/phpunit --exclude-group cache-clear,cache-clear-install
  #        - ./bin/phpunit --group cache-clear
  #        - ./bin/phpunit --group cache-clear-install
  #    - <<: *unit_test
  #      env: DATABASE_URL=postgres://postgres:password@localhost/cube4_dev DATABASE_SERVER_VERSION=9
  - &e2e_test
    stage: E2E Test
    before_install:
      - touch .env
      - composer install --dev --no-interaction -o
      - docker-compose -f docker-compose.yml -f docker-compose.e2e.yml up -d ec-cube postgres mailcatcher
      - docker-compose exec ec-cube composer install --dev --no-interaction -o
      - docker-compose exec ec-cube chown -R www-data:www-data var app html
    install:
      - docker-compose exec -u www-data ec-cube bin/console e:i --no-interaction
    php: 7.3
    env: GROUP=admin01
    script: docker-compose -f docker-compose.yml -f docker-compose.e2e.yml run -e --rm codecept run -d -g ${GROUP} --env chrome,pgsql,docker
  - <<: *e2e_test
    php: 7.3
    env: GROUP=admin02
  - <<: *e2e_test
    php: 7.3
    env: GROUP=admin03
  - <<: *e2e_test
    php: 7.3
    env: GROUP=front
